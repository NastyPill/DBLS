dataProcessor1 {
akka {
  actor {
  allow-java-serialization = on
  enable-additional-serialization-bindings = on
    serialization-bindings {
      "com.dbls.app.layer.message.Message" = jackson-json
      "akka.remote.RemoteScope" = java
    }
    serializers {
        java = "akka.serialization.JavaSerializer"
        jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
    }
    provider = "cluster"
  }
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = [
      "akka://system@127.0.0.1:2551",
      "akka://system@127.0.0.1:2552"
            ]
  }
}
}

dataProcessor2 {
akka {
  actor {
  allow-java-serialization = on
  enable-additional-serialization-bindings = on
    serialization-bindings {
      "com.dbls.app.layer.message.Message" = jackson-json
      "akka.remote.RemoteScope" = java
    }
    serializers {
        java = "akka.serialization.JavaSerializer"
        jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
    }
    provider = "cluster"
  }
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 2552
    }
  }

  cluster {
    seed-nodes = [
      "akka://system@127.0.0.1:2551",
      "akka://system@127.0.0.1:2552"
            ]
  }
}
}

listener {
akka {
  actor {
  allow-java-serialization = on
  enable-additional-serialization-bindings = on
    serialization-bindings {
      "com.dbls.app.layer.message.Message" = jackson-json
      "akka.remote.RemoteScope" = java
    }
    serializers {
        java = "akka.serialization.JavaSerializer"
        jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
    }
    provider = "cluster"
  }
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka://system@127.0.0.1:2551",
      "akka://system@127.0.0.1:2552"
            ]
  }
}
}